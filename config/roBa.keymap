#include <interfaces/hid-trackball.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 11>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        left_toggle_game_layer {
            bindings = <&tog 1>;
            key-positions = <39 38 37>;
        };

        right_toggle_game_layer {
            bindings = <&tog 1>;
            key-positions = <40 41>;
        };

        COMBO_ESCAPE {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        toggle_ble_func_layer {
            bindings = <&tog 6>;
            key-positions = <34 35 36>;
        };

        COMBO_F1 {
            bindings = <&kp F1>;
            key-positions = <5 6>;
        };

        COMBO_F2 {
            bindings = <&kp F2>;
            key-positions = <6 7>;
        };

        COMBO_F3 {
            bindings = <&kp F3>;
            key-positions = <7 8>;
        };

        COMBO_F4 {
            bindings = <&kp F4>;
            key-positions = <9 8>;
        };

        COMBO_F5 {
            bindings = <&kp F5>;
            key-positions = <17 18>;
        };

        COMBO_F6 {
            bindings = <&kp F6>;
            key-positions = <18 19>;
        };

        COMBO_F7 {
            bindings = <&kp F7>;
            key-positions = <19 20>;
        };

        COMBO_F8 {
            bindings = <&kp F8>;
            key-positions = <20 21>;
        };

        COMBO_F9 {
            bindings = <&kp F9>;
            key-positions = <29 30>;
        };

        COMBO_F10 {
            bindings = <&kp F10>;
            key-positions = <30 31>;
        };

        COMBO_F11 {
            bindings = <&kp F11>;
            key-positions = <31 32>;
        };

        COMBO_F12 {
            bindings = <&kp F12>;
            key-positions = <32 33>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R           &kp T                                                              &kp Y             &kp U  &kp I     &kp O     &kp P
&kp A             &kp S         &kp D         &kp F           &kp G             &kp LS(LG(S))             &kp COMMA              &kp H             &kp J  &kp K     &kp L     &lt 4 MINUS
&kp Z             &kp X         &kp C         &kp V           &kp B             &kp TAB                   &kp PERIOD             &kp N             &kp M  &mkp MB1  &mkp MB4  &to 0
&kp LEFT_CONTROL  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT  &lt 2 LANGUAGE_2  &mt LEFT_CONTROL SPACE    &mt RIGHT_SHIFT ENTER  &lt 5 LANGUAGE_1                             &lt 4 DELETE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        GAME {
            bindings = <
&kp TAB         &kp Q   &kp W   &kp E         &kp R                                       &kp T            &trans         &trans    &trans    &trans
&kp ESCAPE      &kp A   &kp S   &kp D         &kp F      &kp LS(LG(S))    &kp RS(COMMA)   &kp RS(PERIOD)   &kp PAGE_UP    &kp J     &kp K     &mo 4
&kp LEFT_SHIFT  &kp Z   &kp X   &kp C         &kp V      &kp M            &kp SPACE       &kp F            &kp PAGE_DOWN  &mkp MB1  &mkp MB4  &to 0
&kp NUMBER_2    &kp F3  &kp F4  &kp LEFT_ALT  &kp SPACE  &kp NUMBER_1     &kp LEFT_ARROW  &kp RIGHT_ARROW                                     &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        TRANSPORT {
            bindings = <
&kp LC(Q)  &kp LC(W)  &kp LC(E)  &kp LC(R)  &kp LC(T)                                &kp F12          &kp HOME            &kp UP_ARROW      &kp END              &kp RIGHT_ALT
&kp LC(A)  &kp LC(S)  &kp LC(D)  &kp LC(F)  &kp LC(G)  &trans       &kp LC(LS(TAB))  &kp BACKSPACE    &kp LEFT_ARROW      &kp DOWN_ARROW    &kp RIGHT_ARROW      &kp LC(TAB)
&kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(B)  &kp LC(Y)    &trans           &kp RG(TAB)      &kp RG(LEFT_ARROW)  &kp RG(UP_ARROW)  &kp RG(RIGHT_ARROW)  &kp RG(DOWN_ARROW)
&trans     &trans     &trans     &trans     &trans     &trans       &kp F4           &kp RIGHT_SHIFT                                                             &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &mkp MB3  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &mkp MB2  &mkp MB5  &mkp MB3
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                              &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        NUM_AND_MARK {
            bindings = <
&kp GRAVE      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp UNDERSCORE     &kp AMPERSAND                                                  &kp ASTERISK  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SLASH
&kp COLON      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp COMMA                &trans                    &kp COMMA   &kp PLUS      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS
&kp SEMICOLON  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SINGLE_QUOTE   &kp PERIOD               &kp BACKSLASH             &kp PERIOD  &kp EQUAL     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0
&kp LESS_THAN  &kp LESS_THAN         &kp GREATER_THAN       &kp LEFT_SHIFT     &mt LEFT_ALT LANGUAGE_2  &mt LEFT_CONTROL SPACE    &trans      &trans                                                  &kp PIPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        BLE_AND_FUNCTION {
            bindings = <
&bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                                  &trans  &kp F1  &kp F2   &kp F3   &kp F4
&trans         &trans         &trans         &trans         &trans         &bt BT_CLR_ALL    &trans       &trans  &kp F5  &kp F6   &kp F7   &kp F8
&bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &bt BT_CLR        &bootloader  &trans  &kp F9  &kp F10  &kp F11  &kp F12
&trans         &trans         &trans         &trans         &trans         &trans            &trans       &trans                            &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
